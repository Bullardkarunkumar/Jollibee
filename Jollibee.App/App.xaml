<Application x:Class="Jollibee.App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz" 
             xmlns:local="clr-namespace:Jollibee.App"
             StartupUri="Home.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="JollibeeStyles\JollibeeDeskStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <Storyboard x:Key="sbShowLeftMenu">
                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,-100,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1"/>
            </Storyboard>
            <Storyboard x:Key="sbHideLeftMenu">
                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,0,-100,0" DecelerationRatio=".9" Duration="0:0:1"/>
            </Storyboard>

            <!--Kayarak Açılma-->
            <Style x:Key="spSlideLeft" TargetType="StackPanel">

                <Style.Triggers>
                    <!--<Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Green"/>
                    </Trigger>-->
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,40,-30,0" To="0,40,0,0" DecelerationRatio=".9" Duration="0:0:0.8"/>
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger.Actions>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,40,0,0" To="0,40,-30,0" DecelerationRatio=".9" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>

            </Style>


            <Style x:Key="MenuLabel" TargetType="Label">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="15,0,0,0"/>
                <Setter Property="Foreground" Value="#FFACB5B9"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FontWeight" Value="Bold"/>

                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="#FFACB5B9"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Expander" TargetType="{x:Type Expander}">
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>

            <Style x:Key="MenuDecLabel" TargetType="Label">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="15,0,0,0"/>
                <Setter Property="Foreground" Value="#FFACB5B9"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>

            </Style>


            <Style x:Key="TabButtonsStyle" TargetType="{x:Type Button}">
                <!--<Setter Property="Foreground" Value="Yellow"/>-->
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--<SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>-->
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="Gray"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="Gray"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="Gray"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="Gray"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="Gray"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="DarkGreen"/>
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#FF2196F3"/>
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="#FF2196F3"/>

            <!--<ResourceDictionary.MergedDictionaries>
            -->
            <!-- Include the Dragablz Material Design style -->
            <!--
         

        </ResourceDictionary.MergedDictionaries>-->

            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}">
                            <!--<Setter Property="Height" Value="120" />-->
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="MinWidth" Value="20" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NotesTab" TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}">
                            <!--<Setter Property="Height" Value="120" />-->
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="MinWidth" Value="20" />
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MultiLineTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextAreaTextBox}">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Style>
            <Style x:Key="MDCheckBoxes" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ResourceKey=GreyContent}">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Margin" Value="20,10,0,0"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </Style>
            <!--<Style TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}">
                -->
            <!--<Setter Property="" Value="280" />-->
            <!--
                <Setter Property="Padding" Value="10" />
            </Style>-->
        </ResourceDictionary>



    </Application.Resources>
</Application>
